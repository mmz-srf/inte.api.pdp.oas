openapi: 3.0.3
info:
  title: INTE PDP Components
  description: OAS Components acting as a contract for data published by INTE to PDP.
  version: v1
paths: { }
components:
  schemas:
    # Angebotsportfolio-Tool
    Konzept:
      description: "Konzept aka Angebot aka Campaign defined in Angebotsportfolio-Tool which also is the Master for Konzept-IDs."
      type: object
      required: [konzeptId, bezeichnung]
      properties:
        konzeptId:
          type: string
          example: "A00104"
          description: "Konzept-ID aka Angebots-ID aka Offer-ID."
        bezeichnung:
          type: string
          example: "Echo der Zeit"
          description: "Official name of the Konzept."
        unternehmenseinheit:
          type: string
          example: "" # TODO
          description: "" # TODO
        kurzbeschreibung:
          type: string
          example: "«Echo der Zeit» ist die älteste politische Hintergrundsendung von Radio SRF: Seit 1945 vermittelt 
                    die Sendung täglich die wichtigsten Nachrichten, Berichte, Reportagen, Interviews und Analysen über 
                    das aktuelle Zeitgeschehen"
          description: "Short description of the Konzept."
        vermarktungen:
          type: array
          items:
            $ref: "#/components/schemas/KonzeptVermarktung"

    KonzeptVermarktung:
      description: "Describes for which channels and at which schedules the Sendungen of a Konzept are planned to be played out."
      type: object
      required: [publikationskanal]
      properties:
        publikationskanal:
          $ref: "#/components/schemas/KonzeptPublikationskanal"
        publikationsregeln:
          type: array
          items:
            $ref: "#/components/schemas/KonzeptPublikationsregel"
        ausnahmen:
          type: array
          description: "Specific dates at which a Sendung of the Konzept shall not be played out." # TODO Ferid fragen, ob dann gespielt oder nicht gespielt werden soll.
          items:
            type: string
            format: date
            example: "2023-07-21"

    KonzeptPublikationskanal:
      description: "A playout-channel of SRF or a third party."
      type: object
      required: [id, bezeichnung]
      properties:
        id:
          type: string
          example: "K00004"
          description: "Unique ID."
        bezeichnung:
          type: string
          example: "Radio SRF 1@Radio"
          description: "Official name of the channel."
        unternehmenseinheit:
          type: string
          example: "" # TODO
          description: ""  # TODO
        vektor:
          $ref: "#/components/schemas/PlayoutVector"

    KonzeptPublikationsregel:
      description: "" # TODO
      type: object
      properties:
        start:
          type: string
          format: date
          example: "2023-07-21"
          description: "Date at which the first playout is planned."
        ende:
          type: string
          format: date
          example: "2030-07-21"
          description: "Date at which the last playout is planned."
        zeit:
          type: string
          format: "HH:mm"
          example: "17:30"
          description: "Time within a day at which playouts are planned."
        dauerInMin:
          type: integer
          example: "43"
          description: "Duration in minutes a playout usually takes."
        wiederholungByDay:
          $ref: "#/components/schemas/ScheduleByDay"
        wiederholungByMonth:
          $ref: "#/components/schemas/ScheduleByMonth"
        wiederholungByMonthDay:
          $ref: "#/components/schemas/ScheduleByMonthDay"
        wiederholungsrateDays:
          type: integer
          example: "3"
          description: "Planned frequency for repetition in days. E.g. every 3 days."
        wiederholungsrateWeeks:
          type: integer
          example: "2"
          description: "Planned frequency for repetition in weeks. E.g. every 2 weeks."
        wiederholungsrateMonths:
          type: integer
          example: "6"
          description: "Planned frequency for repetition in months. E.g. every 6 months."

    # OpenMedia
    OpenMediaSendung:
      description: "Sendung aka Episode aka Program planned in OpenMedia. Internally OpenMedia uses the term Document for this Domain-Object."
      type: object
      required: [id, titel]
      properties:
        id:
          type: string
          example: "urn:openmedia:25647147-2092-4535-a503-3db038ec7ecb:0000000200863F61"
          description: "Unique local identifier within OpenMedia."
        konzeptId:
          type: string
          example: "A00053"
          description: "Konzept-ID aka Angebots-ID aka Offer-ID."
        produktionsId:
          type: string
          example: "AUDI20230629_NR_0005"
          description: "Produktions-ID that OpenMedia retrieved from Digas by a look up with the Konzept-ID."
        titel:
          type: string
          example: "Echo der Zeit" # TODO Sinnvolles Beispiel? -> Verifizieren
          description: "Title of the Sendung."
        lead:
          type: string
          example: "Anna Trechsel" # TODO Sinnvolles Beispiel? -> Verifizieren
          description: "Name of the lead aka editor." # TODO Lead = Redakteur? Mario fragen
        produzent:
          type: string
          example: "SRF News" # TODO Sinnvolles Beispiel? -> Verifizieren
          description: "Name of the producer."
        moderation:
          type: string
          example: "Matthias Kündig" # TODO Sinnvolles Beispiel? -> Verifizieren
          description: "Name of the host. "
        geplanteSendezeit:
          type: string
          format: date-time
          example: "2023-07-21T17:32:28Z" # TODO mit Mario besprechen
          description: "The planned airtime."
        storyTitel:
          type: string
          example: "SRG-Umfrage: Grüne im Sinkflug, SVP im Aufwind"
          description: "The title of the planned story."
        storyLinks:
          type: string
          example: "" # TODO
          description: "" # TODO
        playoutType:
          $ref: '#/components/schemas/PlayoutType'
        audioFilePath:
          type: string
          example: "" # TODO Mit Mario klären, wohin das zeigt. S3 Bucket?
          description: "Path to the Audio-File. Only set if playoutType is FILE."

    # WhatsOn
    WhatsOnProdukt:
      description: "Produkt aka Program planned in WhatsOn."
      type: object
      required: [id]
      properties:
        id:
          type: string
          example: "10029"
          description: "Unique local ID within WhatsOn."
        konzeptId:
          type: string
          example: "A00053"
          description: "Konzept-ID aka Angebots-ID aka Offer-ID."
        titel:
          type: string
          example: "" # TODO
          description: "Title of the Produkt."

    # Common
    PlayoutType:
      type: string
      description: "The type of a playout."
      nullable: true
      enum:
        - FILE
        - LIVE

    PlayoutVector:
      type: string
      description: "The vector for playout."
      nullable: true
      enum:
        - DIGITAL
        - PRINT
        - RADIO
        - TV

    ScheduleByDay:
      description: "Describes a schedule by days - meaning: at which days of the week a Sendung of an Angebot is planned to be played out."
      type: object
      nullable: true
      properties:
        dayOfWeek:
          type: array
          items:
            $ref: "#/components/schemas/DayOfWeek"

    ScheduleByMonth:
      description: "Describes a schedule by month - meaning: in which month a Sendung of an Angebot is planned to be played out."
      type: object
      nullable: true
      properties:
        dayOfWeek:
          type: array
          items:
            $ref: "#/components/schemas/Month"

    ScheduleByMonthDay:
      description: "Describes a schedule by a specific day in a month - meaning: at which day of a month a Sendung of an Angebot is planned to be played out."
      type: object
      nullable: true
      properties:
        dayOfMonth:
          type: array
          items:
            type: integer

    DayOfWeek:
      type: string
      description: "Day of week."
      nullable: false
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY

    Month:
      type: string
      description: "Month"
      nullable: false
      enum:
        - JANUARY
        - FEBRUARY
        - MARCH
        - APRIL
        - MAY
        - JUNE
        - JULY
        - AUGUST
        - SEPTEMBER
        - OCTOBER
        - NOVEMBER
        - DECEMBER